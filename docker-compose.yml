version: "3.8"

services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/mock_data/load.sql:/docker-entrypoint-initdb.d/load.sql
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: gurveer05/attend-ops-backend:latest
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - SECRET_KEY=${SECRET_KEY}
      - DB_PASSWORD=${DB_PASSWORD}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    entrypoint: |
      bash -c "
      if [ -z \"$$GOOGLE_API_KEY\" ]; then
        echo \"Warning: GOOGLE_API_KEY not provided or empty. Some features may not work properly.\"
      fi
      exec uvicorn app:app --host 0.0.0.0 --port 8000
      "
    restart: always

  frontend:
    image: gurveer05/attend-ops-frontend:latest
    build:
      context: ./frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
